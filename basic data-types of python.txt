basic data-types of python


mydata = ('good coder')
print(mydata)
print(type(mydata))

good coder
<class 'str'>

data = (144)
print(data)
print(type(data))

144
<class 'int'>


tup = (10,20,30,40,50)
print(tup)
print(type(tup))

(10, 20, 30, 40, 50)
<class 'tuple'>

list = ['steve','Raj','shivam',1,2,3]
print(list)
print(type(list))

['steve', 'Raj', 'shivam', 1, 2, 3]
<class 'list'>

dict = {'Arvind','babalu','chandu','Deepak'}
print(dict)
print(type(dict))

{'chandu', 'Arvind', 'Deepak', 'babalu'}
<class 'set'>

a=25
b=30
result = a>b
print(result)
print(type(result))

False
<class 'bool'>

mb_data = (3.52)
print(mb_data)
print(type(mb_data))

3.52
<class 'float'>

gb_data =(3+5j)
print(gb_data)
print(type(gb_data))

(3+5j)
<class 'complex'>


cloud_list =['a',['b',['c',['d',['e',['f',['j',['h',['i',['j',['k',['l',['m',['n',['o',['i',['hello world']
                                                                                        ]
                                                                                   ]
                                                                              ]
                                                                         ]
                                                                    ]
                                                               ]
                                                          ]
                                                     ]
                                                ]
                                           ]
                                      ]
                                 ]
                            ]
                       ]
                  ]
             ]

print(cloud_list)
print(cloud_list[0])
print(cloud_list[1])
print(cloud_list[1][0])
print(cloud_list[1][1])
print(cloud_list[1][1][1])
print(cloud_list[1][1][1][1])
print(cloud_list[1][1][1][1][1])
print(cloud_list[1][1][1][1][1][1])
print(cloud_list[1][1][1][1][1][1][1])
print(cloud_list[1][1][1][1][1][1][1][1][1][1][1][1])
print(cloud_list[1][1][1][1][1][1][1][1][1][1][1][1][1][1][1][1][0])


['a', ['b', ['c', ['d', ['e', ['f', ['j', ['h', ['i', ['j', ['k', ['l', ['m', ['n', ['o', ['i', ['hello world']]]]]]]]]]]]]]]]]
a
['b', ['c', ['d', ['e', ['f', ['j', ['h', ['i', ['j', ['k', ['l', ['m', ['n', ['o', ['i', ['hello world']]]]]]]]]]]]]]]]
b
['c', ['d', ['e', ['f', ['j', ['h', ['i', ['j', ['k', ['l', ['m', ['n', ['o', ['i', ['hello world']]]]]]]]]]]]]]]
['d', ['e', ['f', ['j', ['h', ['i', ['j', ['k', ['l', ['m', ['n', ['o', ['i', ['hello world']]]]]]]]]]]]]]
['e', ['f', ['j', ['h', ['i', ['j', ['k', ['l', ['m', ['n', ['o', ['i', ['hello world']]]]]]]]]]]]]
['f', ['j', ['h', ['i', ['j', ['k', ['l', ['m', ['n', ['o', ['i', ['hello world']]]]]]]]]]]]
['j', ['h', ['i', ['j', ['k', ['l', ['m', ['n', ['o', ['i', ['hello world']]]]]]]]]]]
['h', ['i', ['j', ['k', ['l', ['m', ['n', ['o', ['i', ['hello world']]]]]]]]]]
['m', ['n', ['o', ['i', ['hello world']]]]]
hello world





int =[1,2,3,4,5,6,7,[11,22,33,44,55,66,77,[111,222,333,444,555,666,777,[10000,20000,30000,40000,50000,60000,70000,[['hello world']]]]]]
print(int)
print(int[2])
print(int[7][2])
print(int[7][7][2])
print(int[7][7][7][7])
print(int[7][7][7][7][0])
print(int[7][7][7][7][0][0])

[1, 2, 3, 4, 5, 6, 7, [11, 22, 33, 44, 55, 66, 77, [111, 222, 333, 444, 555, 666, 777, [10000, 20000, 30000, 40000, 50000, 60000, 70000, [['hello world']]]]]]
3
33
333
[['hello world']]
['hello world']
hello world




lines_built=['abc','cde','efg','ghk','klmn',[[1,2,3,4,['hello world']]]]
print(lines_built[3])
print(lines_built[5][0])
print(lines_built[5][0][2])
print(lines_built[5][0][4])
print(lines_built[5][0][4][0])

ghk
[1, 2, 3, 4, ['hello world']]
3
['hello world']
hello world


x = ['apple',['mango',['pineapple',['grapes',['guava',[['java apple']]]]]]]
print(x)
print(x[0])
print(x[1][0])
print(x[1][1][0])
print(x[1][1][1][0])
print(x[1][1][1][1][0])
print(x[1][1][1][1][1][0])
print(x[1][1][1][1][1][0][0])

['apple', ['mango', ['pineapple', ['grapes', ['guava', [['java apple']]]]]]]
apple
mango
pineapple
grapes
guava
['java apple']
java apple


y= [[11,22,[[[[['10000']]]]]]]
print(y)
print(y[0])
print(y[0][2][0][0][0][0][0])

[[11, 22, [[[[['10000']]]]]]]
[11, 22, [[[[['10000']]]]]]
10000




pick =[1,2,[22,33,[1000]]]
print(pick[2][2][0])

1000



list=['steve','arvind','raj','deepak','rahul','arati','manju',['priya',['diksha','radhika','roshani']]]
print(list)
print(type(list))

['steve', 'arvind', 'raj', 'deepak', 'rahul', 'arati', 'manju', ['priya', ['diksha', 'radhika', 'roshani']]]
<class 'list'>


mixed_list=['aryan','true',144.50,'3+ij',145]
print(mixed_list)
print(type(mixed_list))

['aryan', 'true', 144.5, '3+ij', 145]
<class 'list'>


data=['apple','mango','banana','grapes']
y=data.append('pineapple')
y=data.append(25000)
print(data)

['apple', 'mango', 'banana', 'grapes', 'pineapple', 25000]


mydata=['cricket','sunflower','football']
x=mydata.insert(1,'badminton')
print(mydata)

['cricket', 'badminton', 'sunflower', 'football']

x=mydata.clear()
print(mydata)

[]

fruits=['apple','mango','banana','pineapple','apple']
x=fruits.count('apple')
print(x)

2

fruits=['apple','mango','banana','pineapple','apple']
fruits.pop()
print(fruits)

['apple', 'mango', 'banana', 'pineapple']

data=['apple','mango','banana','grapes']
x=data.index('grapes')
print(x)

3

fruits=['apple','mango','banana','pineapple','apple']
x=fruits.remove('apple')
print(fruits)

['mango', 'banana', 'pineapple', 'apple']


data=['apple','mango','banana','grapes']
x=data.sort()
print(data)

['apple', 'banana', 'grapes', 'mango']

data=['apple','mango','banana','grapes']
x=data.reverse()
print(data)

['grapes', 'banana', 'mango', 'apple']

#nested list of python

list=['raj','arati','suresh','prithvi',
      [22,33,44,55,66,
       ['apple','babana','pineapple','grapes',
        ['mumbai','goa','delhi','chennai']]]]
print(list)
print(list[3])
print(list[4][1])
print(list[4][5][2])
print(list[4][5][4][0])

['raj', 'arati', 'suresh', 'prithvi', [22, 33, 44, 55, 66, ['apple', 'babana', 'pineapple', 'grapes', ['mumbai', 'goa', 'delhi', 'chennai']]]]
prithvi
33
pineapple
mumbai



#set of python

row_1={1,2,3,4,5,6,20,30,40,50,60}
print(row_1)
print(type(row_1))

{1, 2, 3, 4, 5, 6, 40, 50, 20, 60, 30}
<class 'set'>


data_set={'apple','banana','orange','grapes'}
data_set.add('pune')
print(data_set)
print(type(data_set))

{'banana', 'grapes', 'apple', 'orange', 'pune'}
<class 'set'>


data_set1={'apple','banana','orange','grapes'}
data_set1.clear()
print(data_set1)

set()

result=data_set.copy()
print(result)

{'apple', 'banana', 'grapes', 'orange'}



data_set2={'apple','banana','orange','grapes'}
data_set2.pop()
print(data_set2)

{'orange', 'banana', 'grapes'}


data_set2={'apple','banana','orange','grapes'}
data_set2.remove('banana')
print(data_set2)

{'orange', 'apple', 'grapes'}


x={1,2,3,4,5}
y={10,20,30,40,50,1}
result=x.union(y)
print(result)

{1, 2, 3, 4, 5, 40, 10, 50, 20, 30}

x={1,2,3,4,5}
y={10,20,30,40,50,1}
result=x.intersection(y)
print(result)

{1}

set_1={'mumbai','goa','canada','gujrat','usa'}
set_2={'delhi','chennai','rajasthan','mumbai','canada'}
result=set_1.difference(set_2)
print(result)
result=set_2.difference(set_1)
print(result)

{'gujrat', 'goa', 'usa'}
{'chennai', 'rajasthan', 'delhi'}


set_1={'mumbai','goa','canada','gujrat','usa'}
set_2={'delhi','chennai','rajasthan','mumbai','canada'}
result=set_1.issubset(set_2)
print(result)

false


row_1={1,2,3,4}
row_2={1,2,3,4}
result=row_1.issubset(row_2)
print(result)

True


row_1={1,2,3,4}
row_2={1,2,3,4,55,66.77}
result=row_2.issuperset(row_1)
print(result)

True


#write a program to show all operations of Set
emp={'Anuj',101,'Thane',45000,1,30.5}
print(emp)

{1, 101, 30.5, 45000, 'Thane', 'Anuj'}

emp.add('nashik')
print(emp)

{1, 'nashik', 101, 30.5, 45000, 'Thane', 'Anuj'}

emp.remove(30.5)
print(emp)

{1, 101, 45000, 'Thane', 'Anuj'}

emp.pop()
print(emp)

{'Thane', 101, 45000, 'Anuj', 30.5}

emp.clear()
print(emp)

set()

emp={'Anuj',101,'Thane',45000,1,30.5}
set_1={'ajay','anuj','vijay','laxmi','pooja'}
result=emp.issuperset(set_1)
print(result)

False

result=emp.intersection(set_1)
print(result)

set()

emp={'Anuj',101,'Thane',45000,1,30.5}
set_1={'ajay','anuj','vijay','laxmi','pooja'}
result=emp.difference(set_1)
print(result)

{1, 101, 45000, 'Anuj', 'Thane', 30.5}


#dictionary in python

my_dict = {'name': 'John', 1: [2, 4, 3],'sal':38000,'location':'mumbai'}
print(my_dict)
print(type(my_dict))

{'name': 'John', 1: [2, 4, 3], 'sal': 38000, 'location': 'mumbai'}
<class 'dict'>


print(my_dict['location'])

mumbai

result=my_dict.pop('name')
print(result)

John

result=my_dict.popitem()
print(result)

('location', 'mumbai')

my_dict.update({1011:'kerala'})
print(my_dict)

{'name': 'John', 1: [2, 4, 3], 'sal': 38000, 'location': 'mumbai', 1011: 'kerala'}

my_dict['hobbies']='cricket'
print(my_dict)

{'name': 'John', 1: [2, 4, 3], 'sal': 38000, 'location': 'mumbai', 'hobbies': 'cricket'}




nested_list = [[ ["hello","welcome",33] ], [[222,333,444]  ]]
print(nested_list[0][0][1])
print(nested_list[1][0][1])

welcome
333


name=input("enter your name")
age=int(input("enter your age"))
if age>=18 and age<100:
     print("you got license")
else:
     print("you are not eligible for license")  
     
     
enter your name Deepak
enter your age 22
you got license     
